AOP面向切片
又是一个听起来很高大上的名词 AOP(Aspect Oriented Programming)思想实际上就是: 在运行时 动态地将代码切入到类的指定方法 指定位置上
也就是说 我们可以使用AOP来帮助我们在方法执行前或执行之后 做一些额外的操作 实际上 它就是代理

通过AOP我们可以在保证原有业务不变的情况下 添加额外的动作 比如我们的某些方法执行完成之后 需要打印日志 那么这个时候
我们就可以使用AOP来帮助我们完成 它可以批量地为这些方法添加动作 可以说 它相当于将我们原有的方法 在不改变源代码的基础上进行了增强处理👁‍

                    https://smms.app/image/sJbSrgiAxa8Vhcv

相当于我们的整个业务流程 被直接斩断 并在断掉的位置添加了一个额外的操作 再连接起来 也就是在一个切点位置插入内容 它的原理实际上就是通过动态代理机制实现的
在JavaWeb阶段已经给大家讲解过动态代理了 不过Spring底层并不是使用的JDK提供的动态代理 而是使用的第三方库实现 它能够以父类的形式代理 而不仅仅是接口💨